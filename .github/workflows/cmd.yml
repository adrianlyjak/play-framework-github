name: Command with a default JVM, coursier caching and an optional matrix

on:
  workflow_call:
    inputs:
      java:
        type: string
        required: false
        default: "[ 8 ]"
      add-dimensions:
        type: string
        required: false
        default: "{}"
      include:
        type: string
        required: false
        default: "[]"
      exclude:
        type: string
        required: false
        default: "[]"
      cmd:
        type: string
        required: true
      env:
        type: string
        required: false
        default: ""
      cache-key:
        type: string
        required: false
        default: ""
      cache-path:
        type: string
        required: false
        default: ""

jobs:
  prepare-matrix:
    name: Prepare Matrix
    runs-on: ubuntu-20.04
    outputs:
      matrix: ${{ steps.prepare-matrix.outputs.matrix }}
    steps:
    - id: prepare-matrix
      run: |
        add_dimensions=$(echo -n '${{ inputs.add-dimensions }}' | sed 's/^.*{//;s/}.*$//') # Remove leading { and trailing }
        echo ::set-output name=matrix::{\"java\":$(echo '${{ inputs.java }}'), $(echo ${add_dimensions:+$add_dimensions,})\"include\":$(echo '${{ inputs.include }}'), \"exclude\":$(echo '${{ inputs.exclude }}')}
  cmd:
    name: ${{ toJSON(matrix) }}
    needs: prepare-matrix
    runs-on: ubuntu-20.04
    strategy:
      # WA: https://github.community/t/reusable-workflow-with-strategy-matrix/205676/6
      matrix: ${{fromJson(needs.prepare-matrix.outputs.matrix)}}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # we don't know what commit the last tag was it's safer to get entire repo so previousStableVersion resolves
          fetch-depth: 0

      - name: Set ENV variables
        if: inputs.env != ''
        run: echo '${{ inputs.env }}' >> $GITHUB_ENV

      - name: Coursier Cache
        id: coursier-cache
        uses: coursier/cache-action@v6.3

      - name: Custom Cache
        uses: actions/cache@v2
        if: ${{ inputs.cache-key != '' && inputs.cache-path != '' }}
        with:
          key: ${{ format(inputs.cache-key, matrix.java) }}
          path: ${{ inputs.cache-path }}

      - name: Install Adoptium Temurin OpenJDK
        uses: coursier/setup-action@v1.2.0-M3
        with:
          jvm: adoptium:${{ matrix.java }}

      - name: Print helpful configs and files and show environment
        run: |
          echo "$ cat /etc/sbt/jvmopts"
          cat /etc/sbt/jvmopts || true
          echo ""
          echo "$ cat /etc/sbt/sbtopts"
          cat /etc/sbt/sbtopts || true
          echo ""
          echo "$ env"
          env
          echo "ls -alFhR ~/.ivy2 | grep play | grep jar"
          ls -alFhR ~/.ivy2 | grep play | grep jar || true
          echo "ls -alFhR ~/.cache/coursier | grep play | grep jar"
          ls -alFhR ~/.cache/coursier | grep play | grep jar || true

      - name: Convert matrix elements to environment variables
        run: |
          jq -n -r '$in | to_entries|map("MATRIX_\(.key|ascii_upcase)=\(.value|tostring)")|.[]' --argjson in '${{ toJSON(matrix) }}' >> $GITHUB_ENV

      - name: Run command
        run: ${{ inputs.cmd }}
        env:
          CACHE_HIT_COURSIER: ${{ steps.coursier-cache.outputs.cache-hit-coursier }}

      - name: Cleanup before cache
        shell: bash
        run: |
          find $HOME/Library/Caches/Coursier/v1        -name "ivydata-*.properties" -delete || true
          find $HOME/.ivy2/cache                       -name "ivydata-*.properties" -delete || true
          find $HOME/.cache/coursier/v1                -name "ivydata-*.properties" -delete || true
          find $HOME/.sbt                              -name "*.lock"               -delete || true
